version: "3.8"

services:
  frontend:
    build: ./nodejs-frontend
    container_name: nodejs-frontend
    expose:
      - "3000"   # expose internal port for NGINX
    networks:
      - app-network
    restart: always

  backend:
    build: ./flask-backend
    container_name: flask-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres-db:5432/app_db
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  postgres-db:
    image: postgres:14-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app_db
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgres-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: always

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
